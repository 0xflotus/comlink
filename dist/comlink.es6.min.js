export const Comlink=function(){function a(b){return b instanceof MessagePort&&b.start(),h(async(c,d,e)=>{const g=await f(b,{type:c,callPath:d,argumentsList:e},k(e)),h=g.data;return'PROXY'===h.type?a(h.endpoint):h.obj})}function b(a){return a[q]=!0,a}function c(a,d){d instanceof MessagePort&&d.start(),d.addEventListener('message',async function(f){const g=f.data;let h=await g.callPath.reduce((a,b)=>a[b],a);switch(g.type){case'APPLY':{g.callPath.pop();const c=await g.callPath.reduce((a,b)=>a[b],a),d='AsyncGeneratorFunction'===h.constructor.name;h=await h.apply(c,g.argumentsList),d&&(h=b(h))}case'GET':{const a=m(h);return a.id=g.id,e(d,a,k(h))}case'CONSTRUCT':{const a=new h(...(g.argumentsList||[])),{port1:b,port2:f}=new MessageChannel;return c(a,b),e(d,{id:g.id,type:'PROXY',endpoint:f},[f])}}})}function d(a){return'Window'===a.constructor.name}function e(a,b,c){return d(a)?a.postMessage(b,'*',c):a.postMessage(b,c)}function f(a,b,c){const d=`${n}-${o++}`;return new Promise((f)=>{a.addEventListener('message',function b(c){c.data.id!==d||(a.removeEventListener('message',b),f(c))}),b=Object.assign({},b,{id:d}),e(a,b,c)})}function g(){return'asyncIterator'in Symbol}function h(a){let b=[];return new Proxy(function(){},{construct(c,d){const e=a('CONSTRUCT',b,d);return b=[],e},apply(c,d,e){if('bind'===b[b.length-1]){const c=b.slice();return b=[],(...b)=>a('APPLY',c.slice(0,-1),b)}const f=a('APPLY',b,e);return b=[],f},get(c,d,e){if('then'===d&&0===b.length)return{then:()=>e};if(g()&&d===Symbol.asyncIterator)return()=>e;if('then'===d){const c=a('GET',b);return b=[],Promise.resolve(c).then.bind(c)}return b.push(d),e}})}function i(a){return p.some((b)=>a instanceof b)}function*j(a){if(!a)return;if('string'==typeof a)return;yield a;let b=Object.values(a);Array.isArray(a)&&(b=a);for(const c of b)yield*j(c)}function k(a){const b=[];for(const c of j(a))i(c)&&b.push(c);return b}function l(a){return a&&a[q]}function m(a){if(l(a)){const{port1:b,port2:d}=new MessageChannel;return c(a,b),{type:'PROXY',endpoint:d}}return{type:'OBJECT',obj:a}}const n=Math.floor(Math.random()*Number.MAX_SAFE_INTEGER);let o=0;const p=[ArrayBuffer,MessagePort],q=Symbol('transferProxy');return{proxy:a,transferProxy:b,expose:c}}();
